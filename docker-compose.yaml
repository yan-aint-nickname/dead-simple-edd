version: "3"

services:
  queue:
    image: rabbitmq:3.10.6-management-alpine
    command: rabbitmq-server
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
    healthcheck:
      test: nc -z localhost 5672
      interval: 1s
      timeout: 15s
      retries: 3
    volumes:
      - ./queue:/var/lib/rabbitmq 
  db:
    image: postgres:15.3-alpine3.18
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./scripts/db:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready
      interval: 1s
      timeout: 5s
      retries: 3
  backend:
    build:
      context: .
      dockerfile: Dockerfile_backend
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
    ports:
      - "8081:8081"
  producer:
    build:
      context: .
      dockerfile: Dockerfile_producer
    ports:
      - "3000:3000"
    depends_on:
      - queue
  consumer:
    build:
      context: .
      dockerfile: Dockerfile_consumer
    depends_on:
      - queue
    environment:
      - BROKER_HOST=queue
      - BROKER_USER=rabbitmq
      - BROKER_PASSWORD=rabbitmq
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    restart: on-failure
